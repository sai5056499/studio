
import type { SummarizePageContentOutput } from "@/ai/flows/summarize-page-content";
import type { ImprovePageContentOutput } from "@/ai/flows/improve-page-content";
// Import the AI output type directly to ensure consistency
import type { AiPoweredTaskPlanningOutput as AiTaskOutput } from "@/ai/flows/ai-powered-task-planning";

export interface ChatMessage {
  id: string;
  role: "user" | "assistant" | "system";
  content: string;
  timestamp: Date;
  type?: "summary" | "improvement" | "plan" | "text" | "error";
  data?: SummarizePageContentOutput | ImprovePageContentOutput | PlannedTask | { error: string }; // Use PlannedTask for chat display
}

export type TaskStatus = "todo" | "inprogress" | "completed";

export interface SubTask {
  id: string;
  description: string;
  status: TaskStatus;
}

export interface DailyTask {
  id: string;
  dayDescription: string;
  subTasks: SubTask[];
  status: TaskStatus;
}

// Extend the AI output type to create the application's PlannedTask type
// This ensures that any fields generated by the AI are included,
// and we can add client-specific fields or enforce mandatory ones.
export interface PlannedTask extends AiTaskOutput {
  id: string; // Main task ID, client-generated
  originalDescription: string;
  deadline: string;
  createdAt: Date;
  isDailyReminderSet?: boolean;
  status: TaskStatus; // Now mandatory for the main task
  dailyTasks: DailyTask[]; // Override to use our more specific DailyTask type
}

export type PageContentSource = {
  content: string;
  sourceUrl?: string; // Optional: URL of the page if content is from a specific page
};

